import matplotlib.pyplot as plt
from pylab import *

'''
This is the code that contains my runtimes for the tests done on the 4 different
implementations of solving an embarrassingly parallel problem, and graphs them
using matplotlib
'''

benchprocess = [0.003142842234422763,0.003854626699661215,0.004290022635832429,0.00503884706646204,0.005951087449987729,0.006772715467959643,0.007291178610175848,0.007887885685389241,0.008466009354839722,0.009268071455880999,0.009930693476150432,0.010648807513838014,0.011359897054110965,0.01217426458063225,0.012838349621742963,0.013537287426491578,0.014190960451960563,0.014879955065747102,0.01565572412995001,0.016269071754068137,0.016928375776236255,0.017782796081155537,0.018456407204891244,0.019115966937194268,0.01980179493005077,0.020513693522661924,0.021284080911427736,0.02204768220894039,0.0225792793246607,0.023359908368438483,0.024008377734571696,0.024640653788422544,0.02549638343664507,0.026454937029629946,0.026998657987763484,0.027694247563680014,0.028313114556173483,0.028981024908522765,0.02967814704713722,0.030344449744249383,0.031067202581713596,0.03184437457161645,0.032650536950677635,0.03341771538679798,0.034006644369413454,0.034734402482087416,0.03546801850820581,0.036228150812288126,0.03690373171431323,0.03766764144102732]
benchsize =  [10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,110000,120000,130000,140000,150000,160000,170000,180000,190000,200000,210000,220000,230000,240000,250000,260000,270000,280000,290000,300000,310000,320000,330000,340000,350000,360000,370000,380000,390000,400000,410000,420000,430000,440000,450000,460000,470000,480000,490000,500000]

benchthreaded = [0.0017713244011004765,0.0031917690703024467,0.004768946434681614,0.006263490558291475,0.008096583867445589,0.009298195171480377,0.010863615305473407,0.012306049906959136,0.013751671345283588,0.015434123184531927,0.017122503838812312,0.018645689729601143,0.020225613281751674,0.0218815395111839,0.0232468776901563,0.024741600935036936,0.02642731389030814,0.02819443439754347,0.02952523692821463,0.03112935445581873,0.03278412165430685,0.03444808406134447,0.036108286501839754,0.037573105643192925,0.03914748861764868,0.04078499345729748,0.042376019231354194,0.044076223655914265,0.04575312913085024,0.047546106881151594,0.0488614200334996,0.050277536076804005,0.051932082281758385,0.05366086463443935,0.05504800120058159,0.056748158829286695,0.058552793376147744,0.06007333150754372,0.061765080917005735,0.06311082108567158,0.06521114519486824,0.06642181273860236,0.06796515618140499,0.06950553562492132,0.07118679620636006,0.07271965984255076,0.07431191126815975,0.07591674689824382,0.07744934822432697,0.07935867787959675]

bencheasy = [0.0012312455847859382,0.002469286881387234,0.0037091544798264903,0.004963650687908133,0.006227833141262333,0.007490080391863981,0.00866314470457534,0.009904608760649958,0.011040631830692291,0.012316037177418668,0.013705804543569684,0.014933176593234142,0.01616339062961439,0.017360272680719692,0.01840134191637238,0.01961604124866426,0.020841072564944624,0.02230682053292791,0.02332151424450179,0.024654601328074933,0.025753749993940193,0.027012422289699314,0.028212292967364192,0.02942562900483608,0.03069598989871641,0.03188394939216475,0.033319265339523556,0.03465019292508562,0.035636365329846736,0.03676937794623276,0.038034299227098625,0.039267805352186165,0.04044125830133756,0.041745376316830514,0.0432672376340876,0.04413513134854535,0.04544613796907167,0.04694453657294313,0.04783510389737785,0.049090418942893545,0.05025190308069189,0.051545427944511175,0.05291355431390305,0.053910770422468585,0.05527479315176606,0.05693451203405857,0.05797531676789125,0.05883467724857231,0.08208454217451314,0.061580366703371206]

benchnothread = [0.0013105667941272258,0.0026390299604584773,0.003992888530095418,0.005361850714931885,0.0068352091095099845,0.00813529072639843,0.009416309176012874,0.010745346934224168,0.012028052068005005,0.013369821884358923,0.014816808061053356,0.01631173608203729,0.0175734216440469,0.0190654718875885,0.020195029079914092,0.0216517668000112,0.023106486924613517,0.024527590181678535,0.025863733878359198,0.027302073733881115,0.02871269217071434,0.030053608482703567,0.03134449609244863,0.032846633459751806,0.03438070947614809,0.03554359894556304,0.037104248696317274,0.03859356878635784,0.039946143633375564,0.04121966822072864,0.042605818848436075,0.043997891501833995,0.04557773751206696,0.04694395092005531,0.04821263387488822,0.049606614674751956,0.05119067824135224,0.05232728171162307,0.05386946992017329,0.05524483753057818,0.05716081880343457,0.05808792458536724,0.059315688572824,0.06068063604955872,0.062373181578392785,0.06342210168639818,0.06480781295026342,0.06618796449775498,0.06766768305562437,0.06899155275896192]

def plot_benches(x,y1, y2, y3, y4):
    '''
    y1 = serial w/ overhead
    y2 = threaded
    y3 = serial
    y4 = multiprocessed
    '''
    fig = plt.figure(figsize=(6.5,4)) # make a 6.5" wide by 4" tall figure

    
    plt.plot(x, y1, 'r', label = 'serial' )  # plot a red line with circles
    plt.plot(x, y2, 'b', label = 'threaded')
    plt.plot(x, y3, 'k', label = 'fast serial')
    plt.plot(x, y4, 'g', label = 'multiprocessed')
    legend(framealpha = 0.2)
    plt.xlabel('Size of list ')
    plt.ylabel('Time taken (sec)')
    plt.title("Embarrassingly Parallel")
    plt.tight_layout()              # make the labels "snap" to the grid
                                    # this may emit a warning, which is OK
    plt.savefig("easybenches.png")      # save figure as PNG
    plt.savefig("easybenches.pdf")    # optionally, save figure as PDF
    print('wrote to easybenches.png')
    return

plot_benches(benchsize[0:10], benchnothread[0:10], benchthreaded[0:10], bencheasy[0:10], benchprocess[0:10])
    

